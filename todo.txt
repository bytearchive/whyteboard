Whyteboard 0.42 - To do list
https://launchpad.net/whyteboard -- http://code.google.com/p/whyteboard/
Fri 17 September 2010

---- NEW FEATURES ----

see: https://blueprints.launchpad.net/whyteboard

* Selecting drawn Pen items with the select tool, to move/re-order, like other
  tools
* Improvements for whiteboard pen usage: accepting certain commands to perform
  program shortcuts (e.g. new/close tab, clear sheet etc; sent via a tool like
  ZScreen)
* Drag / drop items in the Shape Viewer to re-arrange them
* Rich Text Control, allowing any part of text to be bolded/coloured differently
  to other parts of the text, as opposed to a single colour/font/style.
* "Zoom" capability; zoom in and out of the canvas. *Will* be difficult to make
* UI changes:
  - the left panel takes up too much vertical space
  - remove the text panel, so you're writing on the canvas (with floating
    "text edit" toolbar, would be cool)
* Hyperlinks to web resources
* Slider bar to "move" back/forwards through a drawing's timeline in a replay,
  as well as being able to jump to the start/end
* Select tool: group items together to move all items together
* Select tool: copy/paste shapes


Eventually, long term:

* Network support with Twisted (a Python network library)
* Poppler support for better PDF rendering - no need to use ImageMagick.
  -> Problems with Windows here though, Linux is more compatible. Research is
    ongoing into Poppler + Windows
* Improved drawing with anti-aliased graphics, including transparency
  -> Performance will be much worse, guaranteed
* Improved user interface with the possibility of docking/floating panels


------------

At this point, I'm happy with the direction Whyteboard is taking. It is well
translated and slowly becoming feature rich, full of small, hidden functionality
that makes using the program easier. Despite slow development over the past few
months, Whyteboard will continue to expand and will grow a whole new bunch of
features. Contributions via the means of feedback, translations, code additions,
patches, bug reports, feature ideas are always welcome - they help improve the
program's quality, usability and usefulness.

- Steven Sproat, April 8 2010